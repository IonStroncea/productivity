@page
@inject IHttpContextAccessor httpContextaccessor
@model WebSite.Pages.ProcessesModel
@{
}

<div class="row">
    <div class="col-2">
        <select class="form-select" aria-label="Default select example" id="computerId">
            <option value="0" selected>Select computer</option>
            @foreach (var computer in @Model.computers)
            {
                <option value="@computer.Key">@computer.Value</option>
            }
        </select>
        <br />
        <button type="button" class="btn btn-primary" onclick="GetCharData()">Submit</button>
    </div>
    <div class="col-10">
        <div id="example-table"></div>
    </div>
</div>

<link href="https://unpkg.com/tabulator-tables/dist/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js"></script>
<script>
    var tabledata = [
        { name: "A", ussage: "1", id: "223", ramUssage: "34" },
        { name: "B", ussage: "1.5", id: "352", ramUssage: "43" },
        { name: "C", ussage: "0.7", id: "743", ramUssage: "46" },
        { name: "D", ussage: "10", id: "643", ramUssage: "54" },
];

//initialize table
    var table = new Tabulator("#example-table", {
        data: tabledata,           //load row data from array
        layout: "fitColumns",      //fit columns to width of table
        responsiveLayout: "hide",  //hide columns that dont fit on the table
        addRowPos: "top",          //when adding a new row, add it to the top of the table
        history: true,             //allow undo and redo actions on the table
        pagination: "local",       //paginate the data
        paginationSize: 20,         //allow 7 rows per page of data
        paginationCounter: "rows", //display count of paginated rows in footer
        movableColumns: true,      //allow column order to be changed
        initialSort: [             //set the initial sort order of the data
            { column: "ramUssage", dir: "desc" },
        ],
        columnDefaults: {
            tooltip: true,         //show tool tips on cells
        },
        columns: [                 //define the table columns
            { title: "Name", field: "name", editor: "input", sorter: "string" },
            { title: "Task id", field: "id", hozAlign: "center", editor: true, sorter: "number" },
            { title: "CPU Usage", field: "ussage", hozAlign: "left", formatter: "progress", editor: true, sorter:"number" },     
            { title: "RAM Usage", field: "ramUssage", editor: true, hozAlign: "center", sorter: "number" }
        ],
    });

    var GetCharData = function () {
        $.ajax({
            url: 'https://localhost:7155/api/ProcessesLastValue',
            data: {
                computerId: document.getElementById("computerId").value,
                userId: '@httpContextaccessor.HttpContext.Session.GetInt32("userId")',
            },
            method: 'GET',
            dataType: 'json',
            success: function (d) {
                tabledata = [];
                table.replaceData(d);
            }
        });
    };
</script>
